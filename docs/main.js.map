{"version":3,"file":"main.js","mappings":"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","sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./projects/core/src/lib/components/org-card.component.ts","./projects/core/src/lib/components/org-card.component.html","./projects/core/src/lib/models/organization.ts","./projects/core/src/lib/models/storage-state.ts","./projects/core/src/lib/services/api-validator.service.ts","./projects/core/src/lib/services/app.service.ts","./projects/core/src/lib/services/core.service.ts","./projects/core/src/lib/services/snacker.service.ts","./projects/core/src/lib/services/theme.service.ts","./projects/core/src/lib/forms/org.form.ts","./projects/core/src/lib/forms/org.form.html","./projects/core/src/lib/components/org-editor.component.ts","./projects/core/src/lib/components/org-editor.component.html","./projects/core/src/lib/components/index.ts","./projects/core/src/lib/dialogs/confirm/confirm.dialog.ts","./projects/core/src/lib/dialogs/confirm/confirm.dialog.html","./projects/core/src/lib/dialogs/index.ts","./projects/core/src/lib/directives/backdrop.directive.ts","./projects/core/src/lib/directives/index.ts","./projects/core/src/lib/forms/index.ts","./projects/core/src/lib/pipes/bytes.pipe.ts","./projects/core/src/lib/pipes/truncate.pipe.ts","./projects/core/src/lib/pipes/index.ts","./projects/core/src/lib/material.module.ts","./projects/core/src/lib/core.module.ts","./projects/core/src/api.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/routes/home/home.route.ts","./src/app/routes/home/home.route.html","./src/app/routes/home/index.ts","./src/app/routes/index.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter\r\n} from '@angular/core';\r\n\r\nimport { Organization } from '../models';\r\n\r\n@Component({\r\n  selector: 'org-card',\r\n  templateUrl: 'org-card.component.html'\r\n})\r\nexport class OrgCardComponent {\r\n  @Input() org: Organization;\r\n  @Input() selected: boolean = false;\r\n  @Input() size: number = 320;\r\n\r\n  @Output() select = new EventEmitter<Organization>();\r\n  @Output() remove = new EventEmitter<Organization>();\r\n}\r\n","<section fxLayout=\"row\"\r\n         fxLayoutAlign=\"start center\"\r\n         class=\"m4 elevated rounded p4\"\r\n         [ngClass]=\"selected ? 'card-outline-primary' : 'card-outline-accent'\"\r\n         [style.width.px]=\"size\">\r\n  <p class=\"m4\"\r\n     fxFlex>{{org.name}}</p>\r\n  <button mat-icon-button\r\n          color=\"warn\"\r\n          matTooltip=\"Remove\"\r\n          (click)=\"remove.emit(org)\">\r\n    <mat-icon>delete_outlined</mat-icon>\r\n  </button>\r\n  <button mat-icon-button\r\n          (click)=\"select.emit(org)\">\r\n    <mat-icon *ngIf=\"selected\"\r\n              matTooltip=\"Deselect\"\r\n              class=\"color-primary\">radio_button_checked</mat-icon>\r\n    <mat-icon *ngIf=\"!(selected)\"\r\n              matTooltip=\"Select\">radio_button_unchecked</mat-icon>\r\n  </button>\r\n</section>\r\n","import {\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators\r\n} from '@angular/forms';\r\n\r\nexport interface Organization {\r\n  id: number;\r\n  name: string;\r\n}\r\n\r\nexport const GenerateOrgForm = (org: Organization, fb: FormBuilder): FormGroup =>\r\n  fb.group({\r\n    id: [org.id],\r\n    name: [org.name, Validators.required]\r\n  })\r\n","export class StorageState<T> {\r\n  private root: string;\r\n  private module: string;\r\n  private key: string;\r\n\r\n  hasState = false;\r\n\r\n  constructor(\r\n    root: string,\r\n    module: string,\r\n    key: string\r\n  ) {\r\n    this.root = root;\r\n    this.module = module;\r\n    this.key = key;\r\n\r\n    this.getState();\r\n  }\r\n\r\n  private name = (module: string, key: string) => `${this.root}-${module}-${key}`;\r\n\r\n  private addLocalItem = (module: string, key: string, value: any) =>\r\n    localStorage.setItem(this.name(module, key), JSON.stringify(value));\r\n\r\n  private getLocalItem = <T>(module: string, key: string): T | null =>\r\n    JSON.parse(localStorage.getItem(this.name(module, key))) as T;\r\n\r\n  private removeLocalItem = (module: string, key: string) =>\r\n    localStorage.removeItem(this.name(module, key));\r\n\r\n  private addSessionItem = (module: string, key: string, value: any) =>\r\n    sessionStorage.setItem(this.name(module, key), JSON.stringify(value));\r\n\r\n  private getSessionItem = <T>(module: string, key: string): T | null =>\r\n    JSON.parse(sessionStorage.getItem(this.name(module, key))) as T;\r\n\r\n  private removeSessionItem = (module: string, key: string) =>\r\n    sessionStorage.removeItem(this.name(module, key));\r\n\r\n  updateState = (value: any, useSession = true) => {\r\n    useSession\r\n      ? this.addSessionItem(this.module, this.key, value)\r\n      : this.addLocalItem(this.module, this.key, value);\r\n\r\n    this.hasState = true;\r\n  }\r\n\r\n  getState = (useSession = true): T | null => {\r\n    const value = useSession\r\n      ? this.getSessionItem<T>(this.module, this.key)\r\n      : this.getLocalItem<T>(this.module, this.key);\r\n\r\n    this.hasState = value\r\n      ? true\r\n      : false;\r\n\r\n    return value;\r\n  }\r\n\r\n  clearState = (useSession = true) => {\r\n    useSession\r\n      ? this.removeSessionItem(this.module, this.key)\r\n      : this.removeLocalItem(this.module, this.key);\r\n\r\n    this.hasState = false;\r\n  }\r\n}\r\n","import {\r\n  AbstractControl,\r\n  FormGroup\r\n} from '@angular/forms';\r\n\r\nimport {\r\n  debounceTime,\r\n  distinctUntilChanged\r\n} from 'rxjs/operators';\r\n\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ApiValidator {\r\n  private setErrorState = (control: AbstractControl, error: string, value?: boolean) => {\r\n    if (value) {\r\n      const errors = control.errors\r\n        ? {\r\n          ...control.errors,\r\n          [error]: value\r\n        }\r\n        : {\r\n          [error]: value\r\n        };\r\n\r\n      control.setErrors(errors);\r\n    } else if (control.errors) {\r\n      if (control.errors.hasOwnProperty(error))\r\n        delete control.errors[error];\r\n\r\n      if (Object.keys(control.errors).length > 0)\r\n        control.setErrors(control.errors);\r\n      else\r\n        control.setErrors(null);\r\n    }\r\n  }\r\n\r\n  registerValidator = async <T>(\r\n    validator: (obj: T) => Promise<boolean>,\r\n    form: FormGroup,\r\n    control: AbstractControl,\r\n    error: string = 'api'\r\n  ) => {\r\n    if (control.value) {\r\n      const res = await validator(form.value);\r\n      this.setErrorState(control, error, res ? null : true);\r\n    }\r\n\r\n    control\r\n      .valueChanges\r\n      .pipe(\r\n        debounceTime(350),\r\n        distinctUntilChanged()\r\n      )\r\n      .subscribe(async (value: string) => {\r\n        if (value) {\r\n          const res = await validator(form.value);\r\n          this.setErrorState(control, error, res ? null : true);\r\n        } else\r\n          this.setErrorState(control, error);\r\n      });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\nconst root = 'jps-async-val';\r\nconst module = 'organization';\r\n\r\nimport {\r\n  Organization,\r\n  StorageState\r\n} from '../models';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AppService {\r\n  private db = new Database();\r\n  private organizations = new BehaviorSubject<Organization[]>(null);\r\n\r\n  organizations$ = this.organizations.asObservable();\r\n\r\n  clearOrganizations = () => this.organizations.next(null);\r\n\r\n  generateState = (org: Organization) => new StorageState<Organization>(root, module, org?.id ? org.id.toString() : 'new');\r\n\r\n  getOrganizations = () => this.organizations.next(\r\n    this.db.getOrganizations()\r\n  );\r\n\r\n  validateOrgName = (org: Organization): Promise<boolean> => new Promise((resolve, reject) => {\r\n    try {\r\n      const res = this.db.validateOrgName(org);\r\n      resolve(res);\r\n    } catch (err: any) {\r\n      reject(err);\r\n    }\r\n  });\r\n\r\n  addOrganization = (org: Organization) => this.db.addOrganization(org);\r\n\r\n  updateOrganization = (org: Organization) => this.db.updateOrganization(org);\r\n\r\n  removeOrganization = (org: Organization) => this.db.removeOrganization(org);\r\n}\r\n\r\nclass Database {\r\n  private db = {\r\n    organizations: new Array<Organization>(\r\n      {\r\n        id: 1,\r\n        name: 'Good Toys'\r\n      } as Organization,\r\n      {\r\n        id: 2,\r\n        name: 'Rapid Bikes'\r\n      } as Organization\r\n    )\r\n  }\r\n\r\n  private generateId = (arr: number[]) => arr.reduce((a, v) => a = v > a ? v : a) + 1;\r\n\r\n  private generateOrgId = () => this.generateId(\r\n    this.db\r\n      .organizations\r\n      .map(x => x.id)\r\n  );\r\n\r\n  getOrganizations = () => this.db.organizations;\r\n\r\n  validateOrgName = (org: Organization) =>\r\n    this.db\r\n      .organizations\r\n      .filter(o =>\r\n        o.id !== org?.id\r\n        && o.name?.toLowerCase() === org?.name?.toLowerCase()\r\n      )\r\n      .length < 1;\r\n\r\n  addOrganization = (org: Organization) => {\r\n    org.id = this.generateOrgId();\r\n    this.db.organizations.push(org);\r\n  }\r\n\r\n  updateOrganization = (org: Organization) => {\r\n    const index = this.db.organizations.findIndex(o => o.id === org?.id);\r\n\r\n    if (typeof index === 'number')\r\n      this.db.organizations[index] = org;\r\n  }\r\n\r\n  removeOrganization = (org: Organization) => {\r\n    const state = new StorageState(root, module, org?.id?.toString());\r\n\r\n    if (state.hasState)\r\n      state.clearState();\r\n\r\n    const index = this.db.organizations.findIndex(o => o.id === org.id);\r\n\r\n    if (typeof index === 'number')\r\n      this.db.organizations.splice(index, 1);\r\n  }\r\n}\r\n","import { HttpHeaders } from '@angular/common/http';\r\n\r\nimport {\r\n  Injectable,\r\n  ElementRef\r\n} from '@angular/core';\r\n\r\nimport {\r\n  fromEvent,\r\n  Observable\r\n} from 'rxjs';\r\n\r\nimport {\r\n  debounceTime,\r\n  distinctUntilChanged,\r\n  map\r\n} from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CoreService {\r\n  ssnPattern = /^(?!(000|666|9))\\d{3}-(?!(00))\\d{2}-(?!(0000))\\d{4}$/g;\r\n\r\n  getUploadOptions = (): HttpHeaders => {\r\n    const headers = new HttpHeaders();\r\n    headers.set('Accept', 'application/json');\r\n    headers.delete('Content-Type');\r\n    return headers;\r\n  }\r\n\r\n  getTextOptions = (): HttpHeaders => {\r\n    const headers = new HttpHeaders();\r\n    headers.set('Content-Type', 'text/plain');\r\n    headers.delete('Pragma');\r\n    return headers;\r\n  }\r\n\r\n  urlEncode = (value: string): string => {\r\n    const regex = /[^a-zA-Z0-9-.]/gi;\r\n    let newValue = value.replace(/\\s/g, '-').toLowerCase();\r\n    newValue = newValue.replace(regex, '');\r\n    return newValue;\r\n  }\r\n\r\n  generateInputObservable = (input: ElementRef): Observable<string> =>\r\n    fromEvent(input.nativeElement, 'keyup')\r\n      .pipe(\r\n        debounceTime(300),\r\n        map((event: any) => event.target.value),\r\n        distinctUntilChanged()\r\n      )\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport {\r\n  MatSnackBar,\r\n  MatSnackBarConfig\r\n} from '@angular/material/snack-bar';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SnackerService {\r\n  private config = new MatSnackBarConfig();\r\n\r\n  constructor(private snackbar: MatSnackBar) {\r\n    this.config.duration = 5000;\r\n    this.config.panelClass = [];\r\n  }\r\n\r\n  private sendMessage = (message: string) => this.snackbar.open(message, 'Close', this.config);\r\n\r\n  setDuration(duration: number) {\r\n    this.config.duration = duration;\r\n  }\r\n\r\n  setClasses = (classes: string[]) => {\r\n    classes.push('snacker');\r\n    this.config.panelClass = classes;\r\n  }\r\n\r\n  sendColorMessage = (message: string, colors: string[]) => {\r\n    this.setClasses(colors);\r\n    this.sendMessage(message);\r\n  }\r\n\r\n  sendErrorMessage = (message: string) => {\r\n    this.setClasses(['snacker-red']);\r\n    this.sendMessage(message);\r\n  }\r\n\r\n  sendWarningMessage = (message: string) => {\r\n    this.setClasses(['snacker-orange']);\r\n    this.sendMessage(message);\r\n  }\r\n\r\n  sendSuccessMessage = (message: string) => {\r\n    this.setClasses(['snacker-green']);\r\n    this.sendMessage(message);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { OverlayContainer } from '@angular/cdk/overlay';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ThemeService {\r\n  isLight = true;\r\n\r\n  setOverlayContainerTheme = () => {\r\n    if (this.isLight) {\r\n      this.overlay.getContainerElement().classList.remove('app-dark');\r\n      this.overlay.getContainerElement().classList.add('app-light');\r\n    } else {\r\n      this.overlay.getContainerElement().classList.remove('app-light');\r\n      this.overlay.getContainerElement().classList.add('app-dark');\r\n    }\r\n  }\r\n\r\n  toggleTheme = () => {\r\n    this.isLight = !this.isLight;\r\n    this.setOverlayContainerTheme();\r\n  }\r\n\r\n  constructor(\r\n    private overlay: OverlayContainer\r\n  ) {\r\n    this.setOverlayContainerTheme();\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input\r\n} from '@angular/core';\r\n\r\nimport {\r\n  ApiValidator,\r\n  AppService\r\n} from '../services';\r\n\r\nimport { FormGroup } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'org-form',\r\n  templateUrl: 'org.form.html',\r\n  providers: [\r\n    ApiValidator,\r\n    AppService\r\n  ]\r\n})\r\nexport class OrgForm {\r\n  form: FormGroup;\r\n\r\n  get name() { return this.form?.get('name') }\r\n\r\n  @Input() set data (data: FormGroup) {\r\n    this.form = data;\r\n\r\n    this.validator.registerValidator(\r\n      this.app.validateOrgName,\r\n      this.form,\r\n      this.name\r\n    );\r\n  }\r\n\r\n  constructor(\r\n    private validator: ApiValidator,\r\n    private app: AppService\r\n  ) { }\r\n}\r\n","<form [formGroup]=\"form\">\r\n  <section fxLayout=\"column\"\r\n           fxLayoutAlign=\"start stretch\">\r\n    <mat-form-field class=\"my4\">\r\n      <mat-label>Name</mat-label>\r\n      <input formControlName=\"name\"\r\n             matInput>\r\n      <mat-error *ngIf=\"name?.errors?.required\">Name is required</mat-error>\r\n      <mat-error *ngIf=\"name?.errors?.api\">Name is already in use</mat-error>\r\n    </mat-form-field>\r\n  </section>\r\n</form>\r\n","import {\r\n  Component,\r\n  EventEmitter,\r\n  Input\r\n} from '@angular/core';\r\n\r\nimport {\r\n  FormBuilder,\r\n  FormGroup\r\n} from '@angular/forms';\r\n\r\nimport {\r\n  GenerateOrgForm,\r\n  Organization,\r\n  StorageState\r\n} from '../models';\r\n\r\nimport { AppService } from '../services';\r\n\r\n@Component({\r\n  selector: 'org-editor',\r\n  templateUrl: 'org-editor.component.html'\r\n})\r\nexport class OrgEditorComponent {\r\n  private org: Organization;\r\n\r\n  state: StorageState<Organization>;\r\n  form: FormGroup;\r\n\r\n  @Input() set data (data: Organization) {\r\n    this.org = data;\r\n    this.load();\r\n  }\r\n\r\n  @Input() label = 'Organization';\r\n  @Input() size = 360;\r\n  @Input() update = new EventEmitter();\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    public app: AppService\r\n  ) { }\r\n\r\n  private load = () => {\r\n    this.state = this.app.generateState(this.org);\r\n\r\n    const value = this.state.hasState\r\n      ? this.state.getState()\r\n      : this.org;\r\n\r\n    this.form = GenerateOrgForm(value, this.fb);\r\n\r\n    this.form\r\n      .valueChanges\r\n      .subscribe((org: Organization) => this.state.updateState(org));\r\n  }\r\n\r\n  clearCache = () => {\r\n    this.form.reset(this.org);\r\n    this.state.clearState();\r\n  }\r\n\r\n  save = () => {\r\n    if (this.form?.valid) {\r\n      this.form?.value?.id\r\n        ? this.app.updateOrganization(this.form.value)\r\n        : this.app.addOrganization(this.form.value);\r\n\r\n      this.clearCache();\r\n      this.update.emit();\r\n    }\r\n  }\r\n}\r\n","<section fxLayout=\"column\"\r\n         fxLayoutAlign=\"start stretch\"\r\n         class=\"p8 elevated rounded card-outline-accent\"\r\n         [style.width.px]=\"size\">\r\n  <org-form [data]=\"form\"></org-form>\r\n  <section fxLayout=\"row\"\r\n           fxLayoutAlign=\"end center\">\r\n    <button mat-stroked-button\r\n            class=\"mx4\"\r\n            [disabled]=\"!(state.hasState)\"\r\n            (click)=\"clearCache()\">\r\n      Clear Cache\r\n    </button>\r\n    <button mat-stroked-button\r\n            class=\"color-primary mx4\"\r\n            [disabled]=\"form?.invalid\"\r\n            (click)=\"save()\">\r\n      Save\r\n    </button>\r\n  </section>\r\n</section>\r\n","import { OrgCardComponent } from './org-card.component';\r\nimport { OrgEditorComponent } from './org-editor.component';\r\n\r\nexport const Components = [\r\n  OrgCardComponent,\r\n  OrgEditorComponent\r\n];\r\n\r\nexport * from './org-card.component';\r\nexport * from './org-editor.component';\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  Inject\r\n} from '@angular/core';\r\n\r\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'confirm-dialog',\r\n  templateUrl: 'confirm.dialog.html'\r\n})\r\nexport class ConfirmDialog implements OnInit {\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data: { title: string, content: string }\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    if (this.data) {\r\n      this.data.title = this.data.title\r\n        ? this.data.title\r\n        : 'Confirm Action?';\r\n\r\n      this.data.content = this.data.content\r\n        ? this.data.content\r\n        : 'Are you sure you would like to perform this action?';\r\n    } else {\r\n      this.data = {\r\n        title: 'Confirm Action?',\r\n        content: 'Are you sure you would like to perform this action?'\r\n      };\r\n    }\r\n  }\r\n}\r\n","<div class=\"mat-typography\">\r\n  <h2 mat-dialog-title>{{data?.title}}</h2>\r\n  <mat-dialog-content>\r\n    <p>{{data?.content}}</p>\r\n  </mat-dialog-content>\r\n  <mat-dialog-actions>\r\n    <button mat-button\r\n            [mat-dialog-close]=\"false\">Cancel</button>\r\n    <button mat-button\r\n            [mat-dialog-close]=\"true\"\r\n            color=\"warn\">Confirm</button>\r\n  </mat-dialog-actions>\r\n</div>\r\n","import { ConfirmDialog } from './confirm';\r\n\r\nexport const Dialogs = [\r\n  ConfirmDialog\r\n];\r\n\r\nexport * from './confirm';\r\n","import {\r\n  Directive,\r\n  OnInit,\r\n  ElementRef,\r\n  Input,\r\n  HostListener\r\n} from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[backdrop]'\r\n})\r\nexport class BackdropDirective implements OnInit {\r\n  @Input() filters: string = 'blur(30px) brightness(1.8)';\r\n  @Input() hover: string = 'blur(30px) brightness(1.8)';\r\n\r\n  constructor(\r\n    public el: ElementRef\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.el.nativeElement.style.backdropFilter = this.filters;\r\n    this.el.nativeElement.classList.add('backdropped');\r\n  }\r\n\r\n  @HostListener('mouseenter') onMouseEnter() {\r\n    this.el.nativeElement.style.backdropFilter = this.hover;\r\n  }\r\n\r\n  @HostListener('mouseleave') onMouseLeave() {\r\n    this.el.nativeElement.style.backdropFilter = this.filters;\r\n  }\r\n}\r\n","import { BackdropDirective } from './backdrop.directive';\r\n\r\nexport const Directives = [\r\n  BackdropDirective\r\n];\r\n\r\nexport * from './backdrop.directive';\r\n","import { OrgForm } from './org.form';\r\n\r\nexport const Forms = [\r\n  OrgForm\r\n];\r\n\r\nexport * from './org.form';\r\n","import {\r\n  Pipe,\r\n  PipeTransform\r\n} from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'bytes'\r\n})\r\nexport class BytesPipe implements PipeTransform {\r\n  transform(value: number, precision = 2) {\r\n    if (!value || value === 0) return '0 Bytes';\r\n\r\n    const k = 1024,\r\n          dm = precision <= 0 ? 0 : precision || 2,\r\n          sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'],\r\n          i = Math.floor(Math.log(value) / Math.log(k));\r\n\r\n    return parseFloat((value / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\r\n  }\r\n}\r\n","import {\r\n  Pipe,\r\n  PipeTransform\r\n} from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'truncate'\r\n})\r\nexport class TruncatePipe implements PipeTransform {\r\n  transform(value: string, limit = 50, ellipses = '...') {\r\n    if (!value) return '';\r\n    return value.length <= limit ? value : `${value.substr(0, limit)}${ellipses}`;\r\n  }\r\n}\r\n","import { BytesPipe } from './bytes.pipe';\r\nimport { TruncatePipe } from './truncate.pipe';\r\n\r\nexport const Pipes = [\r\n  BytesPipe,\r\n  TruncatePipe\r\n];\r\n\r\nexport * from './bytes.pipe';\r\nexport * from './truncate.pipe';\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport {\r\n  MatCommonModule,\r\n  MatLineModule,\r\n  MatNativeDateModule,\r\n  MatOptionModule,\r\n  MatPseudoCheckboxModule,\r\n  MatRippleModule\r\n} from '@angular/material/core';\r\n\r\nimport {\r\n  FlexLayoutModule,\r\n  GridModule\r\n} from '@angular/flex-layout';\r\n\r\nimport { DragDropModule } from '@angular/cdk/drag-drop';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatTreeModule } from '@angular/material/tree';\r\n\r\n@NgModule({\r\n  exports: [\r\n    DragDropModule,\r\n    FlexLayoutModule,\r\n    GridModule,\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatCommonModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatFormFieldModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatLineModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatOptionModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatPseudoCheckboxModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatStepperModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule\r\n  ]\r\n})\r\nexport class MaterialModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MaterialModule } from './material.module';\r\n\r\nimport { Components } from './components';\r\nimport { Dialogs } from './dialogs';\r\nimport { Directives } from './directives';\r\nimport { Forms } from './forms';\r\nimport { Pipes } from './pipes';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ...Components,\r\n    ...Dialogs,\r\n    ...Directives,\r\n    ...Forms,\r\n    ...Pipes\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    MaterialModule\r\n  ],\r\n  exports: [\r\n    ...Components,\r\n    ...Dialogs,\r\n    ...Directives,\r\n    ...Forms,\r\n    ...Pipes,\r\n    MaterialModule\r\n  ]\r\n})\r\nexport class CoreModule { }\r\n","/*\r\n * Public API Surface of core\r\n */\r\n\r\nexport * from './lib';\r\n","import { Component } from '@angular/core';\r\n\r\nimport {\r\n  ThemeService\r\n} from 'core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: 'app.component.html'\r\n})\r\nexport class AppComponent {\r\n  constructor(\r\n    public themer: ThemeService\r\n  ) { }\r\n}\r\n","<section class=\"mat-typography mat-app-background app-frame\"\r\n         [ngClass]=\"themer.isLight ? 'app-light' : 'app-dark'\">\r\n  <mat-toolbar color=\"primary\"\r\n               class=\"app-toolbar sticky-top\">\r\n    <span fxFlex>Async Form Validation</span>\r\n    <button mat-icon-button\r\n            [ngClass]=\"themer.isLight ? 'color-amber' : 'color-text'\"\r\n            (click)=\"themer.toggleTheme()\">\r\n      <mat-icon *ngIf=\"themer.isLight\">brightness_5</mat-icon>\r\n      <mat-icon *ngIf=\"!(themer.isLight)\">brightness_3</mat-icon>\r\n    </button>\r\n  </mat-toolbar>\r\n  <section class=\"app-container\">\r\n    <router-outlet></router-outlet>\r\n  </section>\r\n</section>\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CoreModule } from 'core';\r\nimport { AppComponent } from './app.component';\r\n\r\nimport {\r\n  RouteComponents,\r\n  Routes\r\n} from './routes';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ...RouteComponents\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    CoreModule,\r\n    RouterModule.forRoot(Routes)\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import {\r\n  Component,\r\n  OnInit\r\n} from '@angular/core';\r\n\r\nimport {\r\n  AppService,\r\n  ConfirmDialog,\r\n  Organization\r\n} from 'core';\r\n\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'home-route',\r\n  templateUrl: 'home.route.html'\r\n})\r\nexport class HomeRoute implements OnInit {\r\n  organization: Organization;\r\n\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    public app: AppService\r\n  ) { }\r\n\r\n  private new = () => {\r\n    return {\r\n      id: null,\r\n      name: null\r\n    } as Organization;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.refresh();\r\n    this.organization = this.new();\r\n  }\r\n\r\n  selected = (o: Organization) => o?.id === this.organization?.id;\r\n\r\n  selectOrganization = (o: Organization) =>\r\n    this.organization = this.selected(o)\r\n      ? this.new()\r\n      : o;\r\n\r\n  refresh = () => this.app.getOrganizations();\r\n\r\n  removeOrganization = (o: Organization) => o && this.dialog.open(ConfirmDialog, {\r\n    data: {\r\n      title: 'Remove Organization',\r\n      content: `Are you sure you want to remove organization ${o.name}?`\r\n    },\r\n    disableClose: true,\r\n    autoFocus: false\r\n  })\r\n  .afterClosed()\r\n  .subscribe(res => {\r\n    if (res) {\r\n      if (this.selected(o)) this.selectOrganization(o);\r\n      this.app.removeOrganization(o);\r\n      this.app.getOrganizations();\r\n    }\r\n  });\r\n}\r\n","<ng-template #loading>\r\n  <mat-progress-bar mode=\"indeterminate\"\r\n                    color=\"accent\"></mat-progress-bar>\r\n</ng-template>\r\n<section fxLayout=\"row\"\r\n         fxLayoutAlign=\"start stretch\">\r\n  <section fxLayout=\"column\"\r\n           fxLayoutAlign=\"start stretch\"\r\n           class=\"p8\">\r\n    <p class=\"mat-title bold m4\">Organizations</p>\r\n    <ng-container *ngIf=\"app.organizations$ | async as orgs else loading\">\r\n      <ng-container *ngIf=\"orgs?.length > 0\">\r\n        <org-card *ngFor=\"let o of orgs; trackBy: identify\"\r\n                  [org]=\"o\"\r\n                  [selected]=\"selected(o)\"\r\n                  (select)=\"selectOrganization($event)\"\r\n                  (remove)=\"removeOrganization($event)\"></org-card>\r\n      </ng-container>\r\n      <p *ngIf=\"!(orgs?.length > 0)\"\r\n         class=\"mat-subheading-2 m4 color-warn\">\r\n        No Organizations Available\r\n      </p>\r\n    </ng-container>\r\n  </section>\r\n  <section fxLayout=\"column\"\r\n           fxLayoutAlign=\"start stretch\"\r\n           class=\"p8\"\r\n           fxFlex>\r\n    <p class=\"mat-title bold m4\">Organization Editor</p>\r\n    <org-editor class=\"m4\"\r\n                [data]=\"organization\"\r\n                (update)=\"refresh()\"></org-editor>\r\n  </section>\r\n</section>\r\n","export * from './home.route';\r\n","import { Route } from '@angular/router';\r\nimport { HomeRoute } from './home';\r\n\r\nexport const RouteComponents = [\r\n  HomeRoute\r\n]\r\n\r\nexport const Routes: Route[] = [\r\n  { path: '', component: HomeRoute },\r\n  { path: '**', redirectTo: '', pathMatch: 'full' }\r\n]\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"names":[],"sourceRoot":"webpack:///"}