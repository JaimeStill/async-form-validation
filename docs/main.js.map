{"version":3,"file":"main.js","mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MCZa,UAAU,GAAG;;MCYb,cAAa;AACxB,cACkC,IADlC,EAC0E;AAAxC;AAC7B;;AAEL,UAAQ;AACN,QAAI,KAAK,IAAT,EAAe;AACb,WAAK,IAAL,CAAU,KAAV,GAAkB,KAAK,IAAL,CAAU,KAAV,GACd,KAAK,IAAL,CAAU,KADI,GAEd,iBAFJ;AAIA,WAAK,IAAL,CAAU,OAAV,GAAoB,KAAK,IAAL,CAAU,OAAV,GAChB,KAAK,IAAL,CAAU,OADM,GAEhB,qDAFJ;AAGD,KARD,MAQO;AACL,WAAK,IAAL,GAAY;AACV,aAAK,EAAE,iBADG;AAEV,eAAO,EAAE;AAFC,OAAZ;AAID;AACF;;AApBuB;;;mBAAb,+EAED;;;;QAFC;;;;;;;kECZb;kEAAA;0DAAA;gEAAA;kEAAA;kEAAA;0DAAA;gEAAA;gEAAA;kEAAA;kEAAA;0DAAA;gEAAA;kEAAA;0DAAA;gEAAA;gEAAA;gEAAA;;;;6DAAA;qEAAA;6DAAA;qEAAA;6DAAA;8DAAA;6DAAA;8DAAA;;;eAaA;;;;;qHDDa,eAAa;UAJzB,oDAIyB;WAJf;AACT,cAAQ,EAAE,gBADD;AAET,iBAAW,EAAE;AAFJ;AAIe;;;;cAErB;eAAO;;;;;;MEZC,OAAO,GAAG,CACrB,aADqB;;MCSV,kBAAiB;AAI5B,cACS,EADT,EACuB;AAAd;AAJA,mBAAkB,4BAAlB;AACA,iBAAgB,4BAAhB;AAIJ;;AAEL,UAAQ;AACN,SAAK,EAAL,CAAQ,aAAR,CAAsB,KAAtB,CAA4B,cAA5B,GAA6C,KAAK,OAAlD;AACA,SAAK,EAAL,CAAQ,aAAR,CAAsB,SAAtB,CAAgC,GAAhC,CAAoC,aAApC;AACD;;AAE2B,cAAY;AACtC,SAAK,EAAL,CAAQ,aAAR,CAAsB,KAAtB,CAA4B,cAA5B,GAA6C,KAAK,KAAlD;AACD;;AAE2B,cAAY;AACtC,SAAK,EAAL,CAAQ,aAAR,CAAsB,KAAtB,CAA4B,cAA5B,GAA6C,KAAK,OAAlD;AACD;;AAnB2B;;;mBAAjB,mFAAiB;;;;QAAjB;;;;;eAAA;;eAAA;;;;;;;;;;;qHAAA,mBAAiB;UAH7B,oDAG6B;WAHnB;AACT,cAAQ,EAAE;AADD;AAGmB;;;;;AACnB,WAAO;YAAf,gDAAK;AAAU;AACP,SAAK;YAAb,gDAAK;AAAQ;AAWc,gBAAY;YAAvC,uDAAuC;aAA1B;AAA0B;AAIZ,gBAAY;YAAvC,uDAAuC;aAA1B;AAA0B;;;;MC1B7B,UAAU,GAAG,CACxB,iBADwB;;MCUb,eAAe,GAAG,CAAC,GAAD,EAAoB,EAApB,KAC7B,EAAE,CAAC,KAAH,CAAS;AACP,IAAE,EAAE,CAAC,GAAG,CAAC,EAAL,CADG;AAEP,MAAI,EAAE,CAAC,GAAG,CAAC,IAAL,EAAW,+DAAX,CAFC;AAGP,OAAK,EAAE,CAAC,GAAG,CAAC,KAAL,EAAY,+DAAZ;AAHA,CAAT;;MCLW,UAAS;AACpB,WAAS,CAAC,KAAD,EAAgB,SAAS,GAAG,CAA5B,EAA6B;AACpC,QAAI,CAAC,KAAD,IAAU,KAAK,KAAK,CAAxB,EAA2B,OAAO,SAAP;AAE3B,UAAM,CAAC,GAAG,IAAV;AAAA,UACM,EAAE,GAAG,SAAS,IAAI,CAAb,GAAiB,CAAjB,GAAqB,SAAS,IAAI,CAD7C;AAAA,UAEM,KAAK,GAAG,CAAC,OAAD,EAAU,IAAV,EAAgB,IAAhB,EAAsB,IAAtB,EAA4B,IAA5B,EAAkC,IAAlC,EAAwC,IAAxC,EAA8C,IAA9C,EAAoD,IAApD,CAFd;AAAA,UAGM,CAAC,GAAG,IAAI,CAAC,KAAL,CAAW,IAAI,CAAC,GAAL,CAAS,KAAT,IAAkB,IAAI,CAAC,GAAL,CAAS,CAAT,CAA7B,CAHV;AAKA,WAAO,UAAU,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,GAAL,CAAS,CAAT,EAAY,CAAZ,CAAT,EAAyB,OAAzB,CAAiC,EAAjC,CAAD,CAAV,GAAmD,GAAnD,GAAyD,KAAK,CAAC,CAAD,CAArE;AACD;;AAVmB;;;mBAAT;;;;;QAAA;;;;;qHAAA,WAAS;UAHrB,+CAGqB;WAHhB;AACJ,UAAI,EAAE;AADF;AAGgB;;;MCAT,aAAY;AACvB,WAAS,CAAC,KAAD,EAAgB,KAAK,GAAG,EAAxB,EAA4B,QAAQ,GAAG,KAAvC,EAA4C;AACnD,QAAI,CAAC,KAAL,EAAY,OAAO,EAAP;AACZ,WAAO,KAAK,CAAC,MAAN,IAAgB,KAAhB,GAAwB,KAAxB,GAAgC,GAAG,KAAK,CAAC,MAAN,CAAa,CAAb,EAAgB,KAAhB,CAAsB,GAAG,QAAQ,EAA3E;AACD;;AAJsB;;;mBAAZ;;;;;QAAA;;;;;qHAAA,cAAY;UAHxB,+CAGwB;WAHnB;AACJ,UAAI,EAAE;AADF;AAGmB;;;MCLZ,KAAK,GAAG,CACnB,SADmB,EAEnB,YAFmB;;MCkBR,YAAW;AAHxB;AAIE,sBAAa,uDAAb;;AAEA,4BAAmB;AACjB,YAAM,OAAO,GAAG,IAAI,6DAAJ,EAAhB;AACA,aAAO,CAAC,GAAR,CAAY,QAAZ,EAAsB,kBAAtB;AACA,aAAO,CAAC,MAAR,CAAe,cAAf;AACA,aAAO,OAAP;AACD,KALD;;AAOA,0BAAiB;AACf,YAAM,OAAO,GAAG,IAAI,6DAAJ,EAAhB;AACA,aAAO,CAAC,GAAR,CAAY,cAAZ,EAA4B,YAA5B;AACA,aAAO,CAAC,MAAR,CAAe,QAAf;AACA,aAAO,OAAP;AACD,KALD;;AAOA,qBAAa,KAAD,IAAc;AACxB,YAAM,KAAK,GAAG,kBAAd;AACA,UAAI,QAAQ,GAAG,KAAK,CAAC,OAAN,CAAc,KAAd,EAAqB,GAArB,EAA0B,WAA1B,EAAf;AACA,cAAQ,GAAG,QAAQ,CAAC,OAAT,CAAiB,KAAjB,EAAwB,EAAxB,CAAX;AACA,aAAO,QAAP;AACD,KALD;;AAOA,mCAA2B,KAAD,IACxB,+CAAS,CAAC,KAAK,CAAC,aAAP,EAAsB,OAAtB,CAAT,CACG,IADH,CAEI,4DAAY,CAAC,GAAD,CAFhB,EAGI,mDAAG,CAAE,KAAD,IAAgB,KAAK,CAAC,MAAN,CAAa,KAA9B,CAHP,EAII,oEAAoB,EAJxB,CADF;AAOD;;AA/BuB;;;mBAAX;;;;SAAA;WAAA;cAFC;;;;qHAED,aAAW;UAHvB,qDAGuB;WAHZ;AACV,gBAAU,EAAE;AADF;AAGY;;;MCXX,eAAc;AAGzB,cAAoB,QAApB,EAAyC;AAArB;AAFZ,kBAAS,IAAI,0EAAJ,EAAT;;AAOA,uBAAe,OAAD,IAAqB,KAAK,QAAL,CAAc,IAAd,CAAmB,OAAnB,EAA4B,OAA5B,EAAqC,KAAK,MAA1C,CAAnC;;AAMR,sBAAc,OAAD,IAAkB;AAC7B,aAAO,CAAC,IAAR,CAAa,SAAb;AACA,WAAK,MAAL,CAAY,UAAZ,GAAyB,OAAzB;AACD,KAHD;;AAKA,4BAAmB,CAAC,OAAD,EAAkB,MAAlB,KAAkC;AACnD,WAAK,UAAL,CAAgB,MAAhB;AACA,WAAK,WAAL,CAAiB,OAAjB;AACD,KAHD;;AAKA,4BAAoB,OAAD,IAAgB;AACjC,WAAK,UAAL,CAAgB,CAAC,aAAD,CAAhB;AACA,WAAK,WAAL,CAAiB,OAAjB;AACD,KAHD;;AAKA,8BAAsB,OAAD,IAAgB;AACnC,WAAK,UAAL,CAAgB,CAAC,gBAAD,CAAhB;AACA,WAAK,WAAL,CAAiB,OAAjB;AACD,KAHD;;AAKA,8BAAsB,OAAD,IAAgB;AACnC,WAAK,UAAL,CAAgB,CAAC,eAAD,CAAhB;AACA,WAAK,WAAL,CAAiB,OAAjB;AACD,KAHD;;AA9BE,SAAK,MAAL,CAAY,QAAZ,GAAuB,IAAvB;AACA,SAAK,MAAL,CAAY,UAAZ,GAAyB,EAAzB;AACD;;AAID,aAAW,CAAC,QAAD,EAAiB;AAC1B,SAAK,MAAL,CAAY,QAAZ,GAAuB,QAAvB;AACD;;AAZwB;;;mBAAd,uEAAc;;;;SAAd;WAAA;cAFC;;;;qHAED,gBAAc;UAH1B,qDAG0B;WAHf;AACV,gBAAU,EAAE;AADF;AAGe;;;;;;;MCJd,aAAY;AAkBvB,cACU,OADV,EACmC;AAAzB;AAlBV,mBAAU,IAAV;;AAEA,oCAA2B;AACzB,UAAI,KAAK,OAAT,EAAkB;AAChB,aAAK,OAAL,CAAa,mBAAb,GAAmC,SAAnC,CAA6C,MAA7C,CAAoD,UAApD;AACA,aAAK,OAAL,CAAa,mBAAb,GAAmC,SAAnC,CAA6C,GAA7C,CAAiD,WAAjD;AACD,OAHD,MAGO;AACL,aAAK,OAAL,CAAa,mBAAb,GAAmC,SAAnC,CAA6C,MAA7C,CAAoD,WAApD;AACA,aAAK,OAAL,CAAa,mBAAb,GAAmC,SAAnC,CAA6C,GAA7C,CAAiD,UAAjD;AACD;AACF,KARD;;AAUA,uBAAc;AACZ,WAAK,OAAL,GAAe,CAAC,KAAK,OAArB;AACA,WAAK,wBAAL;AACD,KAHD;;AAQE,SAAK,wBAAL;AACD;;AAtBsB;;;mBAAZ,qEAAY;;;;SAAZ;WAAA;cAFC;;;;qHAED,cAAY;UAHxB,qDAGwB;WAHb;AACV,gBAAU,EAAE;AADF;AAGa;;;;;;;MC6FZ,eAAc;;;mBAAd;;;;QA7CT;;eA6CS;YA7CT,qEACA,qEACA,+DACA,oFACA,sEACA,mFACA,uEACA,qFACA,oEACA,4EACA,sEACA,sEACA,gFACA,uEACA,0EACA,8EACA,+EACA,6EACA,oEACA,sEACA,oEACA,oEACA,oEACA,0EACA,sEACA,8EACA,mFACA,2FACA,8EACA,sEACA,sEACA,wEACA,0EACA,wEACA,mFACA,4EACA,oEACA,0EACA,sEACA,oEACA,0EACA,0EACA;;;;qHAGS,gBAAc;UA/C1B,mDA+C0B;WA/CjB;AACR,aAAO,EAAE,CACP,mEADO,EAEP,mEAFO,EAGP,6DAHO,EAIP,kFAJO,EAKP,oEALO,EAMP,iFANO,EAOP,qEAPO,EAQP,mFARO,EASP,kEATO,EAUP,0EAVO,EAWP,oEAXO,EAYP,oEAZO,EAaP,8EAbO,EAcP,qEAdO,EAeP,wEAfO,EAgBP,4EAhBO,EAiBP,6EAjBO,EAkBP,2EAlBO,EAmBP,kEAnBO,EAoBP,oEApBO,EAqBP,kEArBO,EAsBP,kEAtBO,EAuBP,kEAvBO,EAwBP,wEAxBO,EAyBP,oEAzBO,EA0BP,4EA1BO,EA2BP,iFA3BO,EA4BP,yFA5BO,EA6BP,4EA7BO,EA8BP,oEA9BO,EA+BP,oEA/BO,EAgCP,sEAhCO,EAiCP,wEAjCO,EAkCP,sEAlCO,EAmCP,iFAnCO,EAoCP,0EApCO,EAqCP,kEArCO,EAsCP,wEAtCO,EAuCP,oEAvCO,EAwCP,kEAxCO,EAyCP,wEAzCO,EA0CP,wEA1CO,EA2CP,kEA3CO;AADD;AA+CiB;;;MCvEd,WAAU;;;mBAAV;;;;QAXT;;WAWS;YAZF,CACP,0DADO,EAEP,cAFO,GASP;;;;qHAGS,YAAU;UAnBtB,mDAmBsB;WAnBb;AACR,kBAAY,EAAE,CACZ,GAAG,UADS,EAEZ,GAAG,OAFS,EAGZ,GAAG,UAHS,EAIZ,GAAG,KAJS,CADN;AAOR,aAAO,EAAE,CACP,0DADO,EAEP,cAFO,CAPD;AAWR,aAAO,EAAE,CACP,GAAG,UADI,EAEP,GAAG,OAFI,EAGP,GAAG,UAHI,EAIP,GAAG,KAJI,EAKP,cALO;AAXD;AAmBa;;AC5BvB;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IEQM,2EAAiC;IAAA,uEAAY;IAAA,4DAAW;;;IACxD,2EAAoC;IAAA,uEAAY;IAAA,4DAAW;;ADC1D,MAAM,YAAY;IACvB,YACS,MAAoB;QAApB,WAAM,GAAN,MAAM,CAAc;IACzB,CAAC;;wEAHM,YAAY;0GAAZ,YAAY;QCVzB,6EAC+D;QAC7D,iFAC4C;QAC1C,0EAAa;QAAA,8EAAmB;QAAA,4DAAO;QACvC,4EAEuC;QAA/B,oIAAS,wBAAoB,IAAC;QACpC,kHAAwD;QACxD,kHAA2D;QAC7D,4DAAS;QACX,4DAAc;QACd,6EAA+B;QAC7B,2EAA+B;QACjC,4DAAU;QACZ,4DAAU;;QAdD,kHAAqD;QAKlD,0DAAyD;QAAzD,sHAAyD;QAEpD,0DAAoB;QAApB,oFAAoB;QACpB,0DAAuB;QAAvB,qFAAuB;;;;;;;;;;;;;;;;;;;;;;;;;;ACRkB;AACqB;AAClC;AACE;AACb;AACa;AAK7B;;;;AAiBX,MAAM,SAAS;;kEAAT,SAAS;sGAAT,SAAS,cAFR,wDAAY;2GADb,EAAE,YAPJ;YACP,oEAAa;YACb,yFAAuB;YACvB,uDAAW;YACX,4CAAU;YACV,iEAAoB,CAAC,2CAAM,CAAC;SAC7B;mIAIU,SAAS,mBAblB,wDAAY,6EAIZ,oEAAa;QACb,yFAAuB;QACvB,uDAAW;QACX,4CAAU;;;;;;;;;;;;;;;;;;ACbP,MAAM,SAAS;IACpB,gBACI,CAAC;IAEL,QAAQ;IACR,CAAC;;kEALU,SAAS;uGAAT,SAAS;QCTtB,uEAAwB;QAAA,+DAAI;QAAA,4DAAI;;;;;;;;;;;;;;;;;;ACAH;;;;;;;;;;;;;;;;;;ACCM;AAE5B,MAAM,eAAe,GAAG;IAC7B,4CAAS;CACV;AAEM,MAAM,MAAM,GAAY;IAC7B,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,4CAAS,EAAE;IAClC,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,EAAE,EAAE,SAAS,EAAE,MAAM,EAAE;CAClD;;;;;;;;;;;;;;;;ACVD,gFAAgF;AAChF,mEAAmE;AACnE,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,sEAAsE;;;;;;;;;;;;;;;;;;ACfvB;AAGF;AACY;AAEzD,IAAI,6EAAsB,EAAE;IAC1B,6DAAc,EAAE,CAAC;CAClB;AAED,wEAAwB,CAAC,eAAe,CAAC,sDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./projects/core/src/lib/components/index.ts","./projects/core/src/lib/dialogs/confirm/confirm.dialog.ts","./projects/core/src/lib/dialogs/confirm/confirm.dialog.html","./projects/core/src/lib/dialogs/index.ts","./projects/core/src/lib/directives/backdrop.directive.ts","./projects/core/src/lib/directives/index.ts","./projects/core/src/lib/models/organization.ts","./projects/core/src/lib/pipes/bytes.pipe.ts","./projects/core/src/lib/pipes/truncate.pipe.ts","./projects/core/src/lib/pipes/index.ts","./projects/core/src/lib/services/core.service.ts","./projects/core/src/lib/services/snacker.service.ts","./projects/core/src/lib/services/theme.service.ts","./projects/core/src/lib/material.module.ts","./projects/core/src/lib/core.module.ts","./projects/core/src/api.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/routes/home/home.route.ts","./src/app/routes/home/home.route.html","./src/app/routes/home/index.ts","./src/app/routes/index.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","export const Components = [\r\n];\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  Inject\r\n} from '@angular/core';\r\n\r\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'confirm-dialog',\r\n  templateUrl: 'confirm.dialog.html'\r\n})\r\nexport class ConfirmDialog implements OnInit {\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data: { title: string, content: string }\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    if (this.data) {\r\n      this.data.title = this.data.title\r\n        ? this.data.title\r\n        : 'Confirm Action?';\r\n\r\n      this.data.content = this.data.content\r\n        ? this.data.content\r\n        : 'Are you sure you would like to perform this action?';\r\n    } else {\r\n      this.data = {\r\n        title: 'Confirm Action?',\r\n        content: 'Are you sure you would like to perform this action?'\r\n      };\r\n    }\r\n  }\r\n}\r\n","<div class=\"mat-typography\">\r\n  <h2 mat-dialog-title>{{data?.title}}</h2>\r\n  <mat-dialog-content>\r\n    <p>{{data?.content}}</p>\r\n  </mat-dialog-content>\r\n  <mat-dialog-actions>\r\n    <button mat-button\r\n            [mat-dialog-close]=\"false\">Cancel</button>\r\n    <button mat-button\r\n            [mat-dialog-close]=\"true\"\r\n            color=\"warn\">Confirm</button>\r\n  </mat-dialog-actions>\r\n</div>\r\n","import { ConfirmDialog } from './confirm';\r\n\r\nexport const Dialogs = [\r\n  ConfirmDialog\r\n];\r\n\r\nexport * from './confirm';\r\n","import {\r\n  Directive,\r\n  OnInit,\r\n  ElementRef,\r\n  Input,\r\n  HostListener\r\n} from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[backdrop]'\r\n})\r\nexport class BackdropDirective implements OnInit {\r\n  @Input() filters: string = 'blur(30px) brightness(1.8)';\r\n  @Input() hover: string = 'blur(30px) brightness(1.8)';\r\n\r\n  constructor(\r\n    public el: ElementRef\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.el.nativeElement.style.backdropFilter = this.filters;\r\n    this.el.nativeElement.classList.add('backdropped');\r\n  }\r\n\r\n  @HostListener('mouseenter') onMouseEnter() {\r\n    this.el.nativeElement.style.backdropFilter = this.hover;\r\n  }\r\n\r\n  @HostListener('mouseleave') onMouseLeave() {\r\n    this.el.nativeElement.style.backdropFilter = this.filters;\r\n  }\r\n}\r\n","import { BackdropDirective } from './backdrop.directive';\r\n\r\nexport const Directives = [\r\n  BackdropDirective\r\n];\r\n\r\nexport * from './backdrop.directive';\r\n","import {\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators\r\n} from '@angular/forms';\r\n\r\nexport interface Organization {\r\n  id: number;\r\n  name: string;\r\n  label: string;\r\n}\r\n\r\nexport const GenerateOrgForm = (org: Organization, fb: FormBuilder): FormGroup =>\r\n  fb.group({\r\n    id: [org.id],\r\n    name: [org.name, Validators.required],\r\n    label: [org.label, Validators.required]\r\n  })\r\n","import {\r\n  Pipe,\r\n  PipeTransform\r\n} from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'bytes'\r\n})\r\nexport class BytesPipe implements PipeTransform {\r\n  transform(value: number, precision = 2) {\r\n    if (!value || value === 0) return '0 Bytes';\r\n\r\n    const k = 1024,\r\n          dm = precision <= 0 ? 0 : precision || 2,\r\n          sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'],\r\n          i = Math.floor(Math.log(value) / Math.log(k));\r\n\r\n    return parseFloat((value / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\r\n  }\r\n}\r\n","import {\r\n  Pipe,\r\n  PipeTransform\r\n} from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'truncate'\r\n})\r\nexport class TruncatePipe implements PipeTransform {\r\n  transform(value: string, limit = 50, ellipses = '...') {\r\n    if (!value) return '';\r\n    return value.length <= limit ? value : `${value.substr(0, limit)}${ellipses}`;\r\n  }\r\n}\r\n","import { BytesPipe } from './bytes.pipe';\r\nimport { TruncatePipe } from './truncate.pipe';\r\n\r\nexport const Pipes = [\r\n  BytesPipe,\r\n  TruncatePipe\r\n];\r\n\r\nexport * from './bytes.pipe';\r\nexport * from './truncate.pipe';\r\n","import { HttpHeaders } from '@angular/common/http';\r\n\r\nimport {\r\n  Injectable,\r\n  ElementRef\r\n} from '@angular/core';\r\n\r\nimport {\r\n  fromEvent,\r\n  Observable\r\n} from 'rxjs';\r\n\r\nimport {\r\n  debounceTime,\r\n  distinctUntilChanged,\r\n  map\r\n} from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CoreService {\r\n  ssnPattern = /^(?!(000|666|9))\\d{3}-(?!(00))\\d{2}-(?!(0000))\\d{4}$/g;\r\n\r\n  getUploadOptions = (): HttpHeaders => {\r\n    const headers = new HttpHeaders();\r\n    headers.set('Accept', 'application/json');\r\n    headers.delete('Content-Type');\r\n    return headers;\r\n  }\r\n\r\n  getTextOptions = (): HttpHeaders => {\r\n    const headers = new HttpHeaders();\r\n    headers.set('Content-Type', 'text/plain');\r\n    headers.delete('Pragma');\r\n    return headers;\r\n  }\r\n\r\n  urlEncode = (value: string): string => {\r\n    const regex = /[^a-zA-Z0-9-.]/gi;\r\n    let newValue = value.replace(/\\s/g, '-').toLowerCase();\r\n    newValue = newValue.replace(regex, '');\r\n    return newValue;\r\n  }\r\n\r\n  generateInputObservable = (input: ElementRef): Observable<string> =>\r\n    fromEvent(input.nativeElement, 'keyup')\r\n      .pipe(\r\n        debounceTime(300),\r\n        map((event: any) => event.target.value),\r\n        distinctUntilChanged()\r\n      )\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport {\r\n  MatSnackBar,\r\n  MatSnackBarConfig\r\n} from '@angular/material/snack-bar';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SnackerService {\r\n  private config = new MatSnackBarConfig();\r\n\r\n  constructor(private snackbar: MatSnackBar) {\r\n    this.config.duration = 5000;\r\n    this.config.panelClass = [];\r\n  }\r\n\r\n  private sendMessage = (message: string) => this.snackbar.open(message, 'Close', this.config);\r\n\r\n  setDuration(duration: number) {\r\n    this.config.duration = duration;\r\n  }\r\n\r\n  setClasses = (classes: string[]) => {\r\n    classes.push('snacker');\r\n    this.config.panelClass = classes;\r\n  }\r\n\r\n  sendColorMessage = (message: string, colors: string[]) => {\r\n    this.setClasses(colors);\r\n    this.sendMessage(message);\r\n  }\r\n\r\n  sendErrorMessage = (message: string) => {\r\n    this.setClasses(['snacker-red']);\r\n    this.sendMessage(message);\r\n  }\r\n\r\n  sendWarningMessage = (message: string) => {\r\n    this.setClasses(['snacker-orange']);\r\n    this.sendMessage(message);\r\n  }\r\n\r\n  sendSuccessMessage = (message: string) => {\r\n    this.setClasses(['snacker-green']);\r\n    this.sendMessage(message);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { OverlayContainer } from '@angular/cdk/overlay';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ThemeService {\r\n  isLight = true;\r\n\r\n  setOverlayContainerTheme = () => {\r\n    if (this.isLight) {\r\n      this.overlay.getContainerElement().classList.remove('app-dark');\r\n      this.overlay.getContainerElement().classList.add('app-light');\r\n    } else {\r\n      this.overlay.getContainerElement().classList.remove('app-light');\r\n      this.overlay.getContainerElement().classList.add('app-dark');\r\n    }\r\n  }\r\n\r\n  toggleTheme = () => {\r\n    this.isLight = !this.isLight;\r\n    this.setOverlayContainerTheme();\r\n  }\r\n\r\n  constructor(\r\n    private overlay: OverlayContainer\r\n  ) {\r\n    this.setOverlayContainerTheme();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport {\r\n  MatCommonModule,\r\n  MatLineModule,\r\n  MatNativeDateModule,\r\n  MatOptionModule,\r\n  MatPseudoCheckboxModule,\r\n  MatRippleModule\r\n} from '@angular/material/core';\r\n\r\nimport {\r\n  FlexLayoutModule,\r\n  GridModule\r\n} from '@angular/flex-layout';\r\n\r\nimport { DragDropModule } from '@angular/cdk/drag-drop';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatTreeModule } from '@angular/material/tree';\r\n\r\n@NgModule({\r\n  exports: [\r\n    DragDropModule,\r\n    FlexLayoutModule,\r\n    GridModule,\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatCommonModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatFormFieldModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatLineModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatOptionModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatPseudoCheckboxModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatStepperModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule\r\n  ]\r\n})\r\nexport class MaterialModule { }\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MaterialModule } from './material.module';\n\nimport { Components } from './components';\nimport { Dialogs } from './dialogs';\nimport { Directives } from './directives';\nimport { Pipes } from './pipes';\n\n@NgModule({\n  declarations: [\n    ...Components,\n    ...Dialogs,\n    ...Directives,\n    ...Pipes\n  ],\n  imports: [\n    CommonModule,\n    MaterialModule\n  ],\n  exports: [\n    ...Components,\n    ...Dialogs,\n    ...Directives,\n    ...Pipes,\n    MaterialModule\n  ]\n})\nexport class CoreModule { }\n","/*\n * Public API Surface of core\n */\n\nexport * from './lib';\n","import { Component } from '@angular/core';\n\nimport {\n  ThemeService\n} from 'core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html'\n})\nexport class AppComponent {\n  constructor(\n    public themer: ThemeService\n  ) { }\n}\n","<section class=\"mat-typography mat-app-background app-frame\"\r\n         [ngClass]=\"themer.isLight ? 'app-light' : 'app-dark'\">\r\n  <mat-toolbar color=\"primary\"\r\n               class=\"app-toolbar sticky-top\">\r\n    <span fxFlex>AsyncFormValidation</span>\r\n    <button mat-icon-button\r\n            [ngClass]=\"themer.isLight ? 'color-amber' : 'color-text'\"\r\n            (click)=\"themer.toggleTheme()\">\r\n      <mat-icon *ngIf=\"themer.isLight\">brightness_5</mat-icon>\r\n      <mat-icon *ngIf=\"!(themer.isLight)\">brightness_3</mat-icon>\r\n    </button>\r\n  </mat-toolbar>\r\n  <section class=\"app-container\">\r\n    <router-outlet></router-outlet>\r\n  </section>\r\n</section>\r\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { CoreModule } from 'core';\nimport { AppComponent } from './app.component';\n\nimport {\n  RouteComponents,\n  Routes\n} from './routes';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ...RouteComponents\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    CoreModule,\n    RouterModule.forRoot(Routes)\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {\r\n  Component,\r\n  OnInit\r\n} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'home-route',\r\n  templateUrl: 'home.route.html'\r\n})\r\nexport class HomeRoute implements OnInit {\r\n  constructor(\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n}\r\n","<p class=\"mat-title m8\">Home</p>\r\n","export * from './home.route';\r\n","import { Route } from '@angular/router';\r\nimport { HomeRoute } from './home';\r\n\r\nexport const RouteComponents = [\r\n  HomeRoute\r\n]\r\n\r\nexport const Routes: Route[] = [\r\n  { path: '', component: HomeRoute },\r\n  { path: '**', redirectTo: '', pathMatch: 'full' }\r\n]\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":[],"sourceRoot":"webpack:///"}